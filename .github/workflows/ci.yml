name: Django CI

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r portfolio/requirements.txt

    - name: Copy .env file
      run: |
        echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> portfolio/.env
        echo "DEBUG=1" >> portfolio/.env
        echo "DJANGO_ALLOWED_HOSTS=${{ secrets.DJANGO_ALLOWED_HOSTS }}" >> portfolio/.env
        echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> portfolio/.env
        echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> portfolio/.env
        echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> portfolio/.env
        echo "DATABASE_URL=postgres://${{ secrets.POSTGRES_USER }}:${{ secrets.POSTGRES_PASSWORD }}@localhost:5432/${{ secrets.POSTGRES_DB }}" >> portfolio/.env

    - name: Wait for PostgreSQL to be ready
      run: |
        echo "Waiting for PostgreSQL to be ready..."
        for i in {1..10}; do
          if pg_isready -h localhost -p 5432 -U ${{ secrets.POSTGRES_USER }}; then
            echo "PostgreSQL is ready!"
            break
          fi
          echo "PostgreSQL is not ready yet. Waiting..."
          docker ps -a
          docker logs $(docker ps -q --filter "name=postgres")
          sleep 5
        done
        if ! pg_isready -h localhost -p 5432 -U ${{ secrets.POSTGRES_USER }}; then
          echo "PostgreSQL did not become ready in time."
          exit 1
        fi

    - name: Run migrations
      run: python portfolio/manage.py migrate

    - name: Run tests
      run: python portfolio/manage.py test

    - name: Deploy to DigitalOcean
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        SSH_KNOWN_HOSTS: ${{ secrets.SSH_KNOWN_HOSTS }}
      run: |
        chmod 600 id_ed25519
        ssh-keyscan -H ${{ secrets.DJANGO_ALLOWED_HOSTS }} >> known_hosts
        scp -i id_ed25519 -o StrictHostKeyChecking=no -o UserKnownHostsFile=known_hosts -r portfolio root@${{ secrets.DJANGO_ALLOWED_HOSTS }}:/root/SRE_JR/portfolio
        scp -i id_ed25519 -o StrictHostKeyChecking=no -o UserKnownHostsFile=known_hosts portfolio/.env root@${{ secrets.DJANGO_ALLOWED_HOSTS }}:/root/SRE_JR/portfolio/.env
        ssh -i id_ed25519 -o StrictHostKeyChecking=no -o UserKnownHostsFile=known_hosts root@${{ secrets.DJANGO_ALLOWED_HOSTS }} 'cd /root/SRE_JR/portfolio && docker-compose build && docker-compose up -d'
